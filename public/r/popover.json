{
  "name": "popover",
  "type": "registry:component",
  "title": "Popover",
  "description": "A handy small component for your little input needs...ðŸ˜‰",
  "dependencies": ["@radix-ui/react-popover", "class-variance-authority"],
  "author": "Ankan Bhattacharya <https://github.com/ankan002>",
  "files": [
    {
      "path": "components/retroui/Popover.tsx",
      "target": "components/retroui/Popover.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\n\nimport { cn } from \"@/lib/utils\";\nimport { cva, VariantProps } from \"class-variance-authority\";\n\nconst popoverContentVariants = cva(\n    \"z-50 w-72 rounded-md border bg-primary p-4 text-popover-foreground  outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n    {\n        variants: {\n            variant: {\n                default: \"bg-background\",\n                primary: \"bg-primary\",\n            },\n            shadow: {\n                default: \"\",\n                sm: \"shadow-sm\",\n                md: \"shadow-md\",\n                lg: \"shadow-lg\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            shadow: \"default\",\n        },\n    },\n);\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverAnchor = PopoverPrimitive.Anchor;\n\nconst PopoverContent = React.forwardRef<\n    React.ElementRef<typeof PopoverPrimitive.Content>,\n    React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content> &\n        VariantProps<typeof popoverContentVariants>\n>(\n    (\n        {\n            className,\n            align = \"center\",\n            sideOffset = 4,\n            variant,\n            shadow,\n            ...props\n        },\n        ref,\n    ) => (\n        <PopoverPrimitive.Portal>\n            <PopoverPrimitive.Content\n                ref={ref}\n                align={align}\n                sideOffset={sideOffset}\n                className={cn(\n                    popoverContentVariants({\n                        variant,\n                        shadow,\n                        className,\n                    }),\n                )}\n                {...props}\n            />\n        </PopoverPrimitive.Portal>\n    ),\n);\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\n"
    }
  ]
}
